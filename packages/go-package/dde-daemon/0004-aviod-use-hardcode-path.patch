diff --git a/accounts1/user.go b/accounts1/user.go
index 8101d9c6..16c7f15f 100644
--- a/accounts1/user.go
+++ b/accounts1/user.go
@@ -482,7 +482,7 @@ func (u *User) checkIsControlCenter(sender dbus.Sender) bool {
 		return false
 	}
 
-	if exe == controlCenterPath {
+	if strings.Contains(exe, "dde-control-center") {
 		return true
 	}
 
diff --git a/accounts1/user_chpwd_union_id.go b/accounts1/user_chpwd_union_id.go
index 61a691d9..a26bb445 100644
--- a/accounts1/user_chpwd_union_id.go
+++ b/accounts1/user_chpwd_union_id.go
@@ -90,13 +90,13 @@ func newCaller(service *dbusutil.Service, sender dbus.Sender) (ret *caller, err
 	// 只允许来自控制中心, 锁屏和 greetter 的调用
 	var app string
 	switch exe {
-	case "/usr/bin/dde-control-center":
+	if (strings.Contains(exe, "dde-control-center")) {
 		app = "control-center"
-	case "/usr/bin/dde-lock":
+	} else if (strings.Contains(exe, "dde-lock")) {
 		app = "lock"
-	case "/usr/bin/lightdm-deepin-greeter":
+	} else if (strings.Contains(exe, "lightdm-deepin-greeter")) {
 		app = "greeter"
-	default:
+	} else {
 		err = fmt.Errorf("set password with Union ID called by %s, which is not allow", exe)
 		return
 	}
diff --git a/bin/dde-authority/fprint_transaction.go b/bin/dde-authority/fprint_transaction.go
index ca2951a0..3223ad25 100644
--- a/bin/dde-authority/fprint_transaction.go
+++ b/bin/dde-authority/fprint_transaction.go
@@ -461,7 +461,7 @@ func (tx *FPrintTransaction) End(sender dbus.Sender) *dbus.Error {
 
 func killFPrintDaemon() {
 	logger.Debug("kill fprintd")
-	err := exec.Command("pkill", "-f", "/usr/lib/fprintd/fprintd").Run()
+	err := exec.Command("pkill", "fprintd").Run()
 	if err != nil {
 		logger.Warning("failed to kill fprintd:", err)
 	}
diff --git a/grub2/grub2.go b/grub2/grub2.go
index 085b7157..10cb8256 100644
--- a/grub2/grub2.go
+++ b/grub2/grub2.go
@@ -603,7 +603,7 @@ func checkInvokePermission(service *dbusutil.Service, sender dbus.Sender) error
 	if err != nil {
 		return err
 	}
-	if cmd == "/usr/bin/dde-control-center" {
+	if strings.Contains(cmd, "dde-control-center") {
 		return nil
 	}
 	uid, err := service.GetConnUID(string(sender))
diff --git a/inputdevices/keyboard.go b/inputdevices/keyboard.go
index ceb50163..565ecf7b 100644
--- a/inputdevices/keyboard.go
+++ b/inputdevices/keyboard.go
@@ -52,7 +52,7 @@ const (
 	kbdSystemConfig = "/etc/default/keyboard"
 	qtDefaultConfig = ".config/Trolltech.conf"
 
-	cmdSetKbd = "/usr/bin/setxkbmap"
+	cmdSetKbd = "setxkbmap"
 )
 
 type Keyboard struct {
diff --git a/keybinding/shortcuts/system_shortcut.go b/keybinding/shortcuts/system_shortcut.go
index 6b1adf79..69d8ca63 100644
--- a/keybinding/shortcuts/system_shortcut.go
+++ b/keybinding/shortcuts/system_shortcut.go
@@ -82,10 +82,10 @@ var defaultSysActionCmdMap = map[string]string{
 	"launcher":               "dbus-send --print-reply --dest=org.deepin.dde.Launcher1 /org/deepin/dde/Launcher1 org.deepin.dde.Launcher1.Toggle",
 	"terminal":               "/usr/lib/deepin-daemon/default-terminal",
 	"terminal-quake":         "deepin-terminal --quake-mode",
-	"lock-screen":            "originmap=$(setxkbmap -query | grep option | awk -F ' ' '{print $2}');/usr/bin/setxkbmap -option grab:break_actions&&/usr/bin/xdotool key XF86Ungrab&&dbus-send --print-reply --dest=org.deepin.dde.LockFront1 /org/deepin/dde/LockFront1 org.deepin.dde.LockFront1.Show; setxkbmap -option $originmap",
+	"lock-screen":            "originmap=$(setxkbmap -query | grep option | awk -F ' ' '{print $2}');setxkbmap -option grab:break_actions&&xdotool key XF86Ungrab&&dbus-send --print-reply --dest=org.deepin.dde.LockFront1 /org/deepin/dde/LockFront1 org.deepin.dde.LockFront1.Show; setxkbmap -option $originmap",
 	"logout":                 "dbus-send --print-reply --dest=org.deepin.dde.ShutdownFront1 /org/deepin/dde/ShutdownFront1 org.deepin.dde.ShutdownFront1.Show",
 	"deepin-screen-recorder": "dbus-send --print-reply --dest=com.deepin.ScreenRecorder /com/deepin/ScreenRecorder com.deepin.ScreenRecorder.stopRecord",
-	"system-monitor":         "/usr/bin/deepin-system-monitor",
+	"system-monitor":         "deepin-system-monitor",
 	"color-picker":           "dbus-send --print-reply --dest=com.deepin.Picker /com/deepin/Picker com.deepin.Picker.Show",
 	// screenshot actions:
 	"screenshot":            screenshotCmdPrefix + "StartScreenshot",
diff --git a/keybinding/special_keycode.go b/keybinding/special_keycode.go
index da5b6257..310f544b 100644
--- a/keybinding/special_keycode.go
+++ b/keybinding/special_keycode.go
@@ -276,7 +276,7 @@ func (m *Manager) handlePower() {
 		}
 		m.systemTurnOffScreen()
 	case powerActionShowUI:
-		cmd := "originmap=$(setxkbmap -query | grep option | awk -F ' ' '{print $2}');/usr/bin/setxkbmap -option grab:break_actions&&/usr/bin/xdotool key XF86Ungrab&&dbus-send --print-reply --dest=org.deepin.dde.LockFront1 /org/deepin/dde/LockFront1 org.deepin.dde.LockFront1.Show&&/usr/bin/setxkbmap -option; setxkbmap -option $originmap"
+		cmd := "originmap=$(setxkbmap -query | grep option | awk -F ' ' '{print $2}');setxkbmap -option grab:break_actions&&xdotool key XF86Ungrab&&dbus-send --print-reply --dest=org.deepin.dde.LockFront1 /org/deepin/dde/LockFront1 org.deepin.dde.LockFront1.Show&&setxkbmap -option; setxkbmap -option $originmap"
 		go func() {
 			locked, err := m.sessionManager.Locked().Get(0)
 			if err != nil {
diff --git a/misc/dde-daemon/keybinding/system_actions.json b/misc/dde-daemon/keybinding/system_actions.json
index 043fb1f9..159051e0 100644
--- a/misc/dde-daemon/keybinding/system_actions.json
+++ b/misc/dde-daemon/keybinding/system_actions.json
@@ -13,7 +13,7 @@
             "Action": "dbus-send --print-reply --dest=com.deepin.ScreenRecorder /com/deepin/ScreenRecorder com.deepin.ScreenRecorder.stopRecord"
         },
         {
-            "Action": "/usr/bin/deepin-system-monitor",
+            "Action": "deepin-system-monitor",
             "Key": "system-monitor"
         },
         {
@@ -21,7 +21,7 @@
             "Action": "dbus-send --print-reply --dest=com.deepin.Picker /com/deepin/Picker com.deepin.Picker.Show"
         },
         {
-            "Action": "originmap=$(setxkbmap -query | grep option | awk -F ' ' '{print $2}');/usr/bin/setxkbmap -option grab:break_actions&&/usr/bin/xdotool key XF86Ungrab&&dbus-send --print-reply --dest=org.deepin.dde.LockFront1 /org/deepin/dde/LockFront1 org.deepin.dde.LockFront1.Show; setxkbmap -option $originmap",
+            "Action": "originmap=$(setxkbmap -query | grep option | awk -F ' ' '{print $2}');/setxkbmap -option grab:break_actions&&xdotool key XF86Ungrab&&dbus-send --print-reply --dest=org.deepin.dde.LockFront1 /org/deepin/dde/LockFront1 org.deepin.dde.LockFront1.Show; setxkbmap -option $originmap",
             "Key": "lock-screen"
         },
         {
diff --git a/misc/etc/acpi/powerbtn.sh b/misc/etc/acpi/powerbtn.sh
index 5c536b9e..39c28987 100755
--- a/misc/etc/acpi/powerbtn.sh
+++ b/misc/etc/acpi/powerbtn.sh
@@ -58,4 +58,4 @@ elif test "$XUSER" != "" && test -x /usr/bin/qdbus; then
 fi
 
 # If all else failed, just initiate a plain shutdown.
-/sbin/shutdown -h now "Power button pressed"
+shutdown -h now "Power button pressed"
diff --git a/misc/udev-rules/80-deepin-fprintd.rules b/misc/udev-rules/80-deepin-fprintd.rules
index c15eb611..3ee680d2 100644
--- a/misc/udev-rules/80-deepin-fprintd.rules
+++ b/misc/udev-rules/80-deepin-fprintd.rules
@@ -1 +1 @@
-SUBSYSTEM=="usb", ENV{DEVTYPE}=="usb_interface", ACTION=="add|remove", ENV{LIBFPRINT_DRIVER}!="" RUN+="/usr/bin/dbus-send --system --dest=org.deepin.dde.Fprintd1 --print-reply /org/deepin/dde/Fprintd1 org.deepin.dde.Fprintd1.TriggerUDevEvent"
+SUBSYSTEM=="usb", ENV{DEVTYPE}=="usb_interface", ACTION=="add|remove", ENV{LIBFPRINT_DRIVER}!="" RUN+="@dbus@/dbus-send --system --dest=org.deepin.dde.Fprintd1 --print-reply /org/deepin/dde/Fprintd1 org.deepin.dde.Fprintd1.TriggerUDevEvent"
diff --git a/system/display/displaycfg.go b/system/display/displaycfg.go
index cda69a77..e394ae07 100644
--- a/system/display/displaycfg.go
+++ b/system/display/displaycfg.go
@@ -255,7 +255,7 @@ func (d *Display) doDetectSupportWayland(sender dbus.Sender) (bool, error) {
 			return false, err
 		}
 		var cmd *exec.Cmd
-		if execPath == "/usr/bin/lightdm-deepin-greeter" {
+		if strings.Contains(execPath, "lightdm-deepin-greeter") {
 			cmd = exec.Command("runuser", "-u", "lightdm", "glxinfo") // runuser -u lightdm glxinfo
 		} else {
 			cmd = exec.Command("glxinfo")
diff --git a/system/power1/manager_lmt.go b/system/power1/manager_lmt.go
index 87556893..f67cb5b0 100644
--- a/system/power1/manager_lmt.go
+++ b/system/power1/manager_lmt.go
@@ -8,6 +8,7 @@ import (
 	"bufio"
 	"io/ioutil"
 	"os"
+	"os/exec"
 	"path/filepath"
 	"strings"
 
@@ -28,7 +29,7 @@ const (
 const lowBatteryThreshold = 20.0
 
 func isLaptopModeBinOk() bool {
-	_, err := os.Stat(laptopModeBin)
+	_, err := exec.LookPath("laptop_mode")
 	return err == nil
 }
 
diff --git a/system/power_manager1/utils.go b/system/power_manager1/utils.go
index 93f433c2..ef603c96 100644
--- a/system/power_manager1/utils.go
+++ b/system/power_manager1/utils.go
@@ -33,7 +33,7 @@ func canSuspend() bool {
 }
 
 func detectVirtualMachine() (string, error) {
-	out, err := exec.Command("/usr/bin/systemd-detect-virt").Output()
+	out, err := exec.Command("systemd-detect-virt").Output()
 	if err != nil {
 		return "", err
 	}
diff --git a/system/systeminfo1/manager.go b/system/systeminfo1/manager.go
index a169e566..e82ace27 100644
--- a/system/systeminfo1/manager.go
+++ b/system/systeminfo1/manager.go
@@ -207,7 +207,7 @@ func filterUnNumber(value string) string {
 
 //执行命令：/usr/bin/getconf LONG_BIT 获取系统位数
 func (m *Manager) systemBit() string {
-	output, err := exec.Command("/usr/bin/getconf", "LONG_BIT").Output()
+	output, err := exec.Command("getconf", "LONG_BIT").Output()
 	if err != nil {
 		return "64"
 	}
diff --git a/systeminfo1/utils.go b/systeminfo1/utils.go
index ed17aeb8..e919fb53 100644
--- a/systeminfo1/utils.go
+++ b/systeminfo1/utils.go
@@ -39,7 +39,7 @@ func getMemoryFromFile(file string) (uint64, error) {
 
 //执行命令：/usr/bin/getconf LONG_BIT 获取系统位数
 func systemBit() string {
-	output, err := exec.Command("/usr/bin/getconf", "LONG_BIT").Output()
+	output, err := exec.Command("getconf", "LONG_BIT").Output()
 	if err != nil {
 		return "64"
 	}
